10:35:45 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_int':
../lcd/lcd_alphanumeric_16x2.c:56: error: invalid operands to binary | (have 'REGISTER' and 'int')
../lcd/lcd_alphanumeric_16x2.c:59: error: invalid operands to binary & (have 'REGISTER' and 'int')
make: *** [lcd/lcd_alphanumeric_16x2.o] Error 1
10:35:54 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     636 bytes (1.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:39:49 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_cfg':
../lcd/lcd_alphanumeric_16x2.c:28: warning: assignment makes pointer from integer without a cast
../lcd/lcd_alphanumeric_16x2.c:29: warning: assignment makes pointer from integer without a cast
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     644 bytes (2.0% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:40:19 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_cfg':
../lcd/lcd_alphanumeric_16x2.c:28: warning: assignment from incompatible pointer type
../lcd/lcd_alphanumeric_16x2.c:29: warning: assignment from incompatible pointer type
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     664 bytes (2.0% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:14:33 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     636 bytes (1.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
15:57:22 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     636 bytes (1.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
15:57:28 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:24: warning: unused variable 'd'
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     530 bytes (1.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
15:57:51 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     530 bytes (1.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
15:58:02 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:24: warning: initialization from incompatible pointer type
../main.c:24: warning: excess elements in scalar initializer
../main.c:24: warning: (near initialization for 'd')
../main.c:24: warning: unused variable 'd'
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     530 bytes (1.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
15:58:15 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:24: warning: unused variable 'd'
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     530 bytes (1.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
15:59:07 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:26: warning: 'd' is used uninitialized in this function
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     562 bytes (1.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:00:53 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:24: error: 'd' undeclared (first use in this function)
../main.c:24: error: (Each undeclared identifier is reported only once
../main.c:24: error: for each function it appears in.)
make: *** [main.o] Error 1
16:01:36 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     534 bytes (1.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:01:42 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     534 bytes (1.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:03:24 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     534 bytes (1.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:10:18 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:22: warning: passing argument 6 of 'lcd_alphnumeric_16x2_cfg' makes pointer from integer without a cast
../main.c:22: warning: array subscript is above array bounds
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     614 bytes (1.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:10:39 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     618 bytes (1.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:11:30 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:24: error: invalid operands to binary | (have 'REGISTER' and 'int')
../main.c:25: error: invalid operands to binary | (have 'REGISTER' and 'int')
make: *** [main.o] Error 1
16:11:41 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     676 bytes (2.1% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:12:00 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     676 bytes (2.1% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:12:26 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     676 bytes (2.1% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:16:00 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     676 bytes (2.1% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:17:05 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     618 bytes (1.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:18:26 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_cfg':
../lcd/lcd_alphanumeric_16x2.c:31: warning: assignment makes pointer from integer without a cast
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     540 bytes (1.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:18:56 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     540 bytes (1.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:19:17 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     540 bytes (1.6% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:20:27 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     602 bytes (1.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:21:21 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     636 bytes (1.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:22:00 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_cfg':
../lcd/lcd_alphanumeric_16x2.c:33: error: invalid type argument of 'unary *' (have 'int')
../lcd/lcd_alphanumeric_16x2.c:34: error: invalid type argument of 'unary *' (have 'int')
make: *** [lcd/lcd_alphanumeric_16x2.o] Error 1
16:22:14 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     636 bytes (1.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:22:48 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:22: warning: passing argument 6 of 'lcd_alphnumeric_16x2_cfg' from incompatible pointer type
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     636 bytes (1.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:23:02 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     636 bytes (1.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:23:12 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:22: warning: passing argument 6 of 'lcd_alphnumeric_16x2_cfg' makes pointer from integer without a cast
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     618 bytes (1.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:23:25 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:22: warning: passing argument 6 of 'lcd_alphnumeric_16x2_cfg' makes pointer from integer without a cast
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     618 bytes (1.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:23:39 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:22: error: expected expression before ']' token
make: *** [main.o] Error 1
16:23:43 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     636 bytes (1.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:24:14 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     626 bytes (1.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:24:25 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     626 bytes (1.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:24:35 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     626 bytes (1.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:24:43 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     626 bytes (1.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:24:50 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_cfg':
../lcd/lcd_alphanumeric_16x2.c:33: warning: array subscript is above array bounds
../lcd/lcd_alphanumeric_16x2.c:34: warning: array subscript is above array bounds
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     626 bytes (1.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:24:58 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_cfg':
../lcd/lcd_alphanumeric_16x2.c:33: warning: array subscript is above array bounds
../lcd/lcd_alphanumeric_16x2.c:34: warning: array subscript is above array bounds
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     626 bytes (1.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:25:24 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     646 bytes (2.0% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:25:43 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     658 bytes (2.0% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:26:23 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     572 bytes (1.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:26:34 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     618 bytes (1.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:27:03 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     652 bytes (2.0% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:28:01 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     636 bytes (1.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:28:15 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     636 bytes (1.9% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:30:15 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     474 bytes (1.4% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:31:20 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     472 bytes (1.4% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:31:32 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     474 bytes (1.4% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:34:00 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     652 bytes (2.0% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:35:46 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     598 bytes (1.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:36:14 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     598 bytes (1.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:36:52 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     444 bytes (1.4% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:37:11 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:     598 bytes (1.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
17:05:08 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1260 bytes (3.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
17:06:05 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1260 bytes (3.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
17:08:13 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1316 bytes (4.0% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
17:11:30 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1250 bytes (3.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
17:11:36 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1250 bytes (3.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
17:13:04 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1250 bytes (3.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
17:13:35 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1250 bytes (3.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
17:15:07 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1238 bytes (3.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
17:15:40 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1232 bytes (3.8% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
17:16:12 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1198 bytes (3.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
17:16:29 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1198 bytes (3.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
17:16:46 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1198 bytes (3.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
17:16:57 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1198 bytes (3.7% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:29:42 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1626 bytes (5.0% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:30:37 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1634 bytes (5.0% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:35:16 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1702 bytes (5.2% Full)
(.text + .data + .bootloader)

Data:          0 bytes (0.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:35:59 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1754 bytes (5.4% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:36:32 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1754 bytes (5.4% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:37:05 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1754 bytes (5.4% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:37:32 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_string':
../lcd/lcd_alphanumeric_16x2.c:232: warning: unused variable 'str_length'
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1764 bytes (5.4% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:37:47 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_string':
../lcd/lcd_alphanumeric_16x2.c:232: warning: unused variable 'str_length'
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1742 bytes (5.3% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:38:14 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_string':
../lcd/lcd_alphanumeric_16x2.c:232: warning: unused variable 'str_length'
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1742 bytes (5.3% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:38:30 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_string':
../lcd/lcd_alphanumeric_16x2.c:232: warning: unused variable 'str_length'
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1742 bytes (5.3% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:38:50 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_string':
../lcd/lcd_alphanumeric_16x2.c:232: warning: unused variable 'str_length'
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1742 bytes (5.3% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:39:35 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:25: warning: pointer targets in initialization differ in signedness
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1720 bytes (5.2% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:39:44 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1720 bytes (5.2% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:39:46 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1704 bytes (5.2% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:40:18 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_string':
../lcd/lcd_alphanumeric_16x2.c:232: warning: pointer targets in passing argument 1 of 'strlen' differ in signedness
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1726 bytes (5.3% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:40:50 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_string':
../lcd/lcd_alphanumeric_16x2.c:232: warning: pointer targets in passing argument 1 of 'strlen' differ in signedness
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:25: warning: pointer targets in initialization differ in signedness
../main.c:26: warning: pointer targets in passing argument 2 of 'lcd_alphnumeric_16x2_send_string' differ in signedness
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1726 bytes (5.3% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:41:03 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:25: warning: pointer targets in initialization differ in signedness
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1726 bytes (5.3% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:41:19 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:26: warning: pointer targets in passing argument 2 of 'lcd_alphnumeric_16x2_send_string' differ in signedness
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1726 bytes (5.3% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:41:35 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1726 bytes (5.3% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:42:04 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1726 bytes (5.3% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:42:45 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1726 bytes (5.3% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:46:51 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1776 bytes (5.4% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:47:36 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1776 bytes (5.4% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:49:24 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1784 bytes (5.4% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:49:58 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1784 bytes (5.4% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:50:03 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1798 bytes (5.5% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:50:16 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1810 bytes (5.5% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:51:05 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1828 bytes (5.6% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:51:24 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    1842 bytes (5.6% Full)
(.text + .data + .bootloader)

Data:          6 bytes (0.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:59:34 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_int':
../lcd/lcd_alphanumeric_16x2.c:257: warning: 'NUM_str' is used uninitialized in this function
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3390 bytes (10.3% Full)
(.text + .data + .bootloader)

Data:         10 bytes (0.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
09:59:47 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3392 bytes (10.4% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:00:08 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3392 bytes (10.4% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:00:21 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3392 bytes (10.4% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:00:32 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3392 bytes (10.4% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:00:51 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3392 bytes (10.4% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:01:10 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3392 bytes (10.4% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:01:27 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3392 bytes (10.4% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:02:26 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3392 bytes (10.4% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:03:13 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3392 bytes (10.4% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:03:25 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3392 bytes (10.4% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:03:49 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3392 bytes (10.4% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:06:46 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3436 bytes (10.5% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:07:19 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_int':
../lcd/lcd_alphanumeric_16x2.c:257: warning: conversion lacks type at end of format
../lcd/lcd_alphanumeric_16x2.c:257: warning: too many arguments for format
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:30: warning: overflow in implicit constant conversion
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3436 bytes (10.5% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:07:39 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:30: warning: overflow in implicit constant conversion
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3436 bytes (10.5% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:07:46 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3436 bytes (10.5% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:08:12 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c:251: error: conflicting types for 'lcd_alphnumeric_16x2_send_int'
../lcd/lcd_alphanumeric_16x2.h:182: error: previous declaration of 'lcd_alphnumeric_16x2_send_int' was here
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_int':
../lcd/lcd_alphanumeric_16x2.c:257: warning: conversion lacks type at end of format
../lcd/lcd_alphanumeric_16x2.c:257: warning: too many arguments for format
make: *** [lcd/lcd_alphanumeric_16x2.o] Error 1
10:08:19 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_int':
../lcd/lcd_alphanumeric_16x2.c:257: warning: conversion lacks type at end of format
../lcd/lcd_alphanumeric_16x2.c:257: warning: too many arguments for format
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3444 bytes (10.5% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:08:26 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_int':
../lcd/lcd_alphanumeric_16x2.c:257: warning: format '%d' expects type 'int', but argument 4 has type 'long int'
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3444 bytes (10.5% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:08:46 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3436 bytes (10.5% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:08:57 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3436 bytes (10.5% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:09:32 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3436 bytes (10.5% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:09:47 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3436 bytes (10.5% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:10:06 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3436 bytes (10.5% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:10:17 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3436 bytes (10.5% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:10:29 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3436 bytes (10.5% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:11:18 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:30: warning: implicit declaration of function 'lcd_alphnumeric_16x2_send_int'
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
./main.o: In function `main':
main.c:(.text.main+0xa2): undefined reference to `lcd_alphnumeric_16x2_send_int'
make: *** [GPIO_LCD.elf] Error 1
10:11:22 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
./main.o: In function `main':
main.c:(.text.main+0xa2): undefined reference to `lcd_alphnumeric_16x2_send_int'
make: *** [GPIO_LCD.elf] Error 1
10:11:26 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
./main.o: In function `main':
main.c:(.text.main+0xa2): undefined reference to `lcd_alphnumeric_16x2_send_int'
make: *** [GPIO_LCD.elf] Error 1
10:11:46 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:30: warning: implicit declaration of function 'lcd_alphnumeric_16x2_send_int'
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
./main.o: In function `main':
main.c:(.text.main+0xa2): undefined reference to `lcd_alphnumeric_16x2_send_int'
make: *** [GPIO_LCD.elf] Error 1
10:11:56 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3436 bytes (10.5% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:12:10 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3436 bytes (10.5% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:14:13 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:30: warning: implicit declaration of function 'lcd_alphnumeric_16x2_send_int'
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3542 bytes (10.8% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:14:39 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3542 bytes (10.8% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:20:23 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
In file included from ../lcd/lcd_alphanumeric_16x2.c:9:
../lcd/lcd_alphanumeric_16x2.h:204: error: both 'unsigned' and 'float' in declaration specifiers
../lcd/lcd_alphanumeric_16x2.c:299: error: both 'unsigned' and 'float' in declaration specifiers
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_ufloat':
../lcd/lcd_alphanumeric_16x2.c:312: warning: implicit declaration of function 'fflsuh'
../lcd/lcd_alphanumeric_16x2.c:303: warning: unused variable 'str_after_point'
make: *** [lcd/lcd_alphanumeric_16x2.o] Error 1
10:20:46 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_ufloat':
../lcd/lcd_alphanumeric_16x2.c:312: warning: implicit declaration of function 'fflsuh'
../lcd/lcd_alphanumeric_16x2.c:303: warning: unused variable 'str_after_point'
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
./lcd/lcd_alphanumeric_16x2.o: In function `lcd_alphnumeric_16x2_send_ufloat':
lcd_alphanumeric_16x2.c:(.text.lcd_alphnumeric_16x2_send_ufloat+0x64): undefined reference to `fflsuh'
make: *** [GPIO_LCD.elf] Error 1
10:25:17 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_ufloat':
../lcd/lcd_alphanumeric_16x2.c:312: warning: implicit declaration of function 'gcvt'
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
./lcd/lcd_alphanumeric_16x2.o: In function `lcd_alphnumeric_16x2_send_ufloat':
lcd_alphanumeric_16x2.c:(.text.lcd_alphnumeric_16x2_send_ufloat+0x80): undefined reference to `gcvt'
make: *** [GPIO_LCD.elf] Error 1
10:26:44 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
./lcd/lcd_alphanumeric_16x2.o: In function `lcd_alphnumeric_16x2_send_ufloat':
lcd_alphanumeric_16x2.c:(.text.lcd_alphnumeric_16x2_send_ufloat+0x80): undefined reference to `gcvt'
make: *** [GPIO_LCD.elf] Error 1
10:27:07 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    5730 bytes (17.5% Full)
(.text + .data + .bootloader)

Data:         20 bytes (1.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:27:50 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_ufloat':
../lcd/lcd_alphanumeric_16x2.c:309: warning: format '%f' expects type 'double', but argument 4 has type 'unsigned int'
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    5732 bytes (17.5% Full)
(.text + .data + .bootloader)

Data:         22 bytes (1.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:30:17 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_ufloat':
../lcd/lcd_alphanumeric_16x2.c:285: warning: format '%f' expects type 'double', but argument 4 has type 'unsigned int'
../lcd/lcd_alphanumeric_16x2.c:288: error: too few arguments to function 'itoa'
../lcd/lcd_alphanumeric_16x2.c:290: error: expected ';' before 'lcd_alphnumeric_16x2_send_string'
../lcd/lcd_alphanumeric_16x2.c:279: warning: unused variable 'str_after_point'
make: *** [lcd/lcd_alphanumeric_16x2.o] Error 1
10:30:32 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_ufloat':
../lcd/lcd_alphanumeric_16x2.c:285: warning: format '%f' expects type 'double', but argument 4 has type 'unsigned int'
../lcd/lcd_alphanumeric_16x2.c:288: error: too few arguments to function 'itoa'
../lcd/lcd_alphanumeric_16x2.c:290: error: expected ';' before 'lcd_alphnumeric_16x2_send_string'
../lcd/lcd_alphanumeric_16x2.c:279: warning: unused variable 'str_after_point'
make: *** [lcd/lcd_alphanumeric_16x2.o] Error 1
10:31:26 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_ufloat':
../lcd/lcd_alphanumeric_16x2.c:285: warning: format '%f' expects type 'double', but argument 4 has type 'unsigned int'
../lcd/lcd_alphanumeric_16x2.c:288: error: too few arguments to function 'itoa'
../lcd/lcd_alphanumeric_16x2.c:290: error: expected ';' before 'lcd_alphnumeric_16x2_send_string'
../lcd/lcd_alphanumeric_16x2.c:279: warning: unused variable 'str_after_point'
make: *** [lcd/lcd_alphanumeric_16x2.o] Error 1
10:31:40 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_ufloat':
../lcd/lcd_alphanumeric_16x2.c:288: error: too few arguments to function 'itoa'
../lcd/lcd_alphanumeric_16x2.c:290: error: expected ';' before 'lcd_alphnumeric_16x2_send_string'
../lcd/lcd_alphanumeric_16x2.c:279: warning: unused variable 'str_after_point'
make: *** [lcd/lcd_alphanumeric_16x2.o] Error 1
10:31:45 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    5776 bytes (17.6% Full)
(.text + .data + .bootloader)

Data:         36 bytes (1.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:32:07 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    5776 bytes (17.6% Full)
(.text + .data + .bootloader)

Data:         36 bytes (1.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:34:35 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_double':
../lcd/lcd_alphanumeric_16x2.c:285: error: 'str_before_point' undeclared (first use in this function)
../lcd/lcd_alphanumeric_16x2.c:285: error: (Each undeclared identifier is reported only once
../lcd/lcd_alphanumeric_16x2.c:285: error: for each function it appears in.)
../lcd/lcd_alphanumeric_16x2.c:278: warning: unused variable 'str'
make: *** [lcd/lcd_alphanumeric_16x2.o] Error 1
10:34:57 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_double':
../lcd/lcd_alphanumeric_16x2.c:281: error: 'str_after_point' undeclared (first use in this function)
../lcd/lcd_alphanumeric_16x2.c:281: error: (Each undeclared identifier is reported only once
../lcd/lcd_alphanumeric_16x2.c:281: error: for each function it appears in.)
make: *** [lcd/lcd_alphanumeric_16x2.o] Error 1
10:35:02 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    2032 bytes (6.2% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:37:23 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3592 bytes (11.0% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:37:47 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3596 bytes (11.0% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:38:04 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_double':
../lcd/lcd_alphanumeric_16x2.c:281: warning: format '%d' expects type 'int', but argument 3 has type 'double'
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3596 bytes (11.0% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:38:36 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_double':
../lcd/lcd_alphanumeric_16x2.c:281: warning: format '%f' expects type 'double', but argument 3 has type 'float'
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3596 bytes (11.0% Full)
(.text + .data + .bootloader)

Data:         12 bytes (0.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:39:50 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3676 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:         28 bytes (1.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:40:12 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_double':
../lcd/lcd_alphanumeric_16x2.c:281: warning: passing argument 2 of 'snprintf' makes integer from pointer without a cast
../lcd/lcd_alphanumeric_16x2.c:281: error: incompatible type for argument 3 of 'snprintf'
make: *** [lcd/lcd_alphanumeric_16x2.o] Error 1
10:40:35 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3676 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:         28 bytes (1.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:51:02 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_double':
../lcd/lcd_alphanumeric_16x2.c:290: warning: implicit declaration of function 'ecvt'
../lcd/lcd_alphanumeric_16x2.c:290: warning: assignment makes pointer from integer without a cast
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
./lcd/lcd_alphanumeric_16x2.o: In function `lcd_alphnumeric_16x2_send_double':
lcd_alphanumeric_16x2.c:(.text.lcd_alphnumeric_16x2_send_double+0x2a): undefined reference to `ecvt'
make: *** [GPIO_LCD.elf] Error 1
10:54:26 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_double':
../lcd/lcd_alphanumeric_16x2.c:282: error: too few arguments to function 'dtostre'
../lcd/lcd_alphanumeric_16x2.c:279: warning: unused variable 'sign'
../lcd/lcd_alphanumeric_16x2.c:279: warning: unused variable 'dec'
make: *** [lcd/lcd_alphanumeric_16x2.o] Error 1
10:57:25 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3178 bytes (9.7% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:57:59 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3178 bytes (9.7% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:58:25 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3178 bytes (9.7% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:58:46 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3178 bytes (9.7% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
10:59:48 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3178 bytes (9.7% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:01:58 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3658 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:02:37 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3658 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:05:09 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_double':
../lcd/lcd_alphanumeric_16x2.c:282: warning: unused variable '_width'
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3658 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:05:59 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_double':
../lcd/lcd_alphanumeric_16x2.c:282: warning: unused variable '_width'
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3658 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:06:11 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_send_double':
../lcd/lcd_alphanumeric_16x2.c:282: warning: unused variable '_width'
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3658 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:07:37 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3658 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:08:01 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3658 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:09:04 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3658 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:14:57 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_print':
../lcd/lcd_alphanumeric_16x2.c:354: warning: dereferencing 'void *' pointer
../lcd/lcd_alphanumeric_16x2.c:354: error: invalid use of void expression
../lcd/lcd_alphanumeric_16x2.c:362: warning: dereferencing 'void *' pointer
../lcd/lcd_alphanumeric_16x2.c:362: error: invalid use of void expression
../lcd/lcd_alphanumeric_16x2.c:366: warning: dereferencing 'void *' pointer
../lcd/lcd_alphanumeric_16x2.c:366: error: invalid use of void expression
make: *** [lcd/lcd_alphanumeric_16x2.o] Error 1
11:16:09 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_print':
../lcd/lcd_alphanumeric_16x2.c:362: warning: dereferencing 'void *' pointer
../lcd/lcd_alphanumeric_16x2.c:362: error: invalid use of void expression
../lcd/lcd_alphanumeric_16x2.c:366: warning: dereferencing 'void *' pointer
../lcd/lcd_alphanumeric_16x2.c:366: error: invalid use of void expression
make: *** [lcd/lcd_alphanumeric_16x2.o] Error 1
11:16:39 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_print':
../lcd/lcd_alphanumeric_16x2.c:358: warning: pointer targets in passing argument 2 of 'lcd_alphnumeric_16x2_send_string' differ in signedness
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3716 bytes (11.3% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:16:55 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_print':
../lcd/lcd_alphanumeric_16x2.c:358: warning: passing argument 2 of 'lcd_alphnumeric_16x2_send_string' makes pointer from integer without a cast
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3720 bytes (11.4% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:17:16 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3716 bytes (11.3% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:17:32 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_print':
../lcd/lcd_alphanumeric_16x2.c:358: error: lvalue required as unary '&' operand
make: *** [lcd/lcd_alphanumeric_16x2.o] Error 1
11:17:39 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3716 bytes (11.3% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:20:08 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3666 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          2 bytes (0.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:20:35 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3676 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:20:53 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3676 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:21:23 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3670 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          2 bytes (0.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:21:42 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3676 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          2 bytes (0.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:23:45 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    4728 bytes (14.4% Full)
(.text + .data + .bootloader)

Data:        258 bytes (12.6% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:24:04 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3676 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          2 bytes (0.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:24:28 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3676 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          2 bytes (0.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:24:43 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3676 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          2 bytes (0.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:24:56 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3676 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          2 bytes (0.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:25:07 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3676 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          2 bytes (0.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:25:30 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3676 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          2 bytes (0.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:26:27 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3676 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          2 bytes (0.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:27:20 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3676 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          2 bytes (0.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:27:31 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3676 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          2 bytes (0.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:27:45 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3676 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          2 bytes (0.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:28:43 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_print':
../lcd/lcd_alphanumeric_16x2.c:366: error: both 'unsigned' and 'double' in declaration specifiers
make: *** [lcd/lcd_alphanumeric_16x2.o] Error 1
11:28:56 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3676 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          2 bytes (0.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:30:25 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3676 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          2 bytes (0.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:30:46 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3676 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          2 bytes (0.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:31:07 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3676 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          2 bytes (0.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:31:55 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3676 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:32:13 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3676 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:32:30 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_print':
../lcd/lcd_alphanumeric_16x2.c:358: warning: passing argument 2 of 'lcd_alphnumeric_16x2_send_string' makes pointer from integer without a cast
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3680 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:32:56 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_print':
../lcd/lcd_alphanumeric_16x2.c:358: warning: passing argument 2 of 'lcd_alphnumeric_16x2_send_string' makes pointer from integer without a cast
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3680 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:33:14 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3676 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:33:30 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_print':
../lcd/lcd_alphanumeric_16x2.c:358: warning: passing argument 2 of 'lcd_alphnumeric_16x2_send_string' makes pointer from integer without a cast
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3680 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:33:49 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_print':
../lcd/lcd_alphanumeric_16x2.c:358: warning: cast from pointer to integer of different size
../lcd/lcd_alphanumeric_16x2.c:358: warning: cast to pointer from integer of different size
../lcd/lcd_alphanumeric_16x2.c:358: warning: passing argument 2 of 'lcd_alphnumeric_16x2_send_string' makes pointer from integer without a cast
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3684 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:34:12 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_print':
../lcd/lcd_alphanumeric_16x2.c:358: warning: cast from pointer to integer of different size
../lcd/lcd_alphanumeric_16x2.c:358: error: invalid type argument of 'unary *' (have 'int')
make: *** [lcd/lcd_alphanumeric_16x2.o] Error 1
11:34:16 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_print':
../lcd/lcd_alphanumeric_16x2.c:358: warning: passing argument 2 of 'lcd_alphnumeric_16x2_send_string' makes pointer from integer without a cast
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3680 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:34:19 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3680 bytes (11.2% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:34:38 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3688 bytes (11.3% Full)
(.text + .data + .bootloader)

Data:         16 bytes (0.8% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
11:34:50 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3698 bytes (11.3% Full)
(.text + .data + .bootloader)

Data:         26 bytes (1.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:30:49 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3698 bytes (11.3% Full)
(.text + .data + .bootloader)

Data:         26 bytes (1.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:38:40 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3698 bytes (11.3% Full)
(.text + .data + .bootloader)

Data:         26 bytes (1.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:54:58 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_print':
../lcd/lcd_alphanumeric_16x2.c:358: warning: passing argument 2 of 'lcd_alphnumeric_16x2_send_string' makes pointer from integer without a cast
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3698 bytes (11.3% Full)
(.text + .data + .bootloader)

Data:         26 bytes (1.3% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
16:55:12 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3690 bytes (11.3% Full)
(.text + .data + .bootloader)

Data:         18 bytes (0.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
17:01:23 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../lcd/lcd_alphanumeric_16x2.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"lcd/lcd_alphanumeric_16x2.d" -MT"lcd/lcd_alphanumeric_16x2.d" -c -o "lcd/lcd_alphanumeric_16x2.o" "../lcd/lcd_alphanumeric_16x2.c"
../lcd/lcd_alphanumeric_16x2.c: In function 'lcd_alphnumeric_16x2_print':
../lcd/lcd_alphanumeric_16x2.c:358: warning: passing argument 2 of 'lcd_alphnumeric_16x2_send_string' makes pointer from integer without a cast
Finished building: ../lcd/lcd_alphanumeric_16x2.c
 
Building file: ../Monitor/Monitor.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"Monitor/Monitor.d" -MT"Monitor/Monitor.d" -c -o "Monitor/Monitor.o" "../Monitor/Monitor.c"
Finished building: ../Monitor/Monitor.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./Monitor/Monitor.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3728 bytes (11.4% Full)
(.text + .data + .bootloader)

Data:         18 bytes (0.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
17:02:12 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../Monitor/Monitor.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"Monitor/Monitor.d" -MT"Monitor/Monitor.d" -c -o "Monitor/Monitor.o" "../Monitor/Monitor.c"
../Monitor/Monitor.c: In function 'init_monitor':
../Monitor/Monitor.c:23: warning: assignment from incompatible pointer type
Finished building: ../Monitor/Monitor.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./Monitor/Monitor.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3728 bytes (11.4% Full)
(.text + .data + .bootloader)

Data:         18 bytes (0.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
17:03:09 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../Monitor/Monitor.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"Monitor/Monitor.d" -MT"Monitor/Monitor.d" -c -o "Monitor/Monitor.o" "../Monitor/Monitor.c"
Finished building: ../Monitor/Monitor.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./Monitor/Monitor.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3728 bytes (11.4% Full)
(.text + .data + .bootloader)

Data:         18 bytes (0.9% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
17:03:25 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./Monitor/Monitor.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3720 bytes (11.4% Full)
(.text + .data + .bootloader)

Data:         10 bytes (0.5% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
17:07:57 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../Monitor/Monitor.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"Monitor/Monitor.d" -MT"Monitor/Monitor.d" -c -o "Monitor/Monitor.o" "../Monitor/Monitor.c"
Finished building: ../Monitor/Monitor.c
 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:27: warning: 'lcd.cfg' is used uninitialized in this function
../main.c:27: warning: 'lcd.obj' is used uninitialized in this function
../main.c:30: warning: 'lcd.init' is used uninitialized in this function
../main.c:34: warning: 'lcd.print' is used uninitialized in this function
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./Monitor/Monitor.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3712 bytes (11.3% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
17:09:11 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:22: warning: 'lcd.obj' is used uninitialized in this function
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./Monitor/Monitor.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3742 bytes (11.4% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
17:09:22 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:22: warning: 'lcd.obj' is used uninitialized in this function
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./Monitor/Monitor.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3742 bytes (11.4% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
17:10:28 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../Monitor/Monitor.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"Monitor/Monitor.d" -MT"Monitor/Monitor.d" -c -o "Monitor/Monitor.o" "../Monitor/Monitor.c"
Finished building: ../Monitor/Monitor.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./Monitor/Monitor.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3742 bytes (11.4% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
17:10:38 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../Monitor/Monitor.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"Monitor/Monitor.d" -MT"Monitor/Monitor.d" -c -o "Monitor/Monitor.o" "../Monitor/Monitor.c"
Finished building: ../Monitor/Monitor.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./Monitor/Monitor.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3742 bytes (11.4% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
17:18:10 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../Monitor/Monitor.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"Monitor/Monitor.d" -MT"Monitor/Monitor.d" -c -o "Monitor/Monitor.o" "../Monitor/Monitor.c"
../Monitor/Monitor.c: In function 'init_monitor':
../Monitor/Monitor.c:22: error: too few arguments to function 'monitor.cfg'
../Monitor/Monitor.c:24: error: too few arguments to function 'monitor.init'
../Monitor/Monitor.c:26: error: too few arguments to function 'monitor.print'
make: *** [Monitor/Monitor.o] Error 1
17:18:18 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../Monitor/Monitor.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"Monitor/Monitor.d" -MT"Monitor/Monitor.d" -c -o "Monitor/Monitor.o" "../Monitor/Monitor.c"
../Monitor/Monitor.c: In function 'init_monitor':
../Monitor/Monitor.c:22: error: expected expression before 'LCD_ALPHANUMERIC_16X2'
../Monitor/Monitor.c:22: error: too few arguments to function 'monitor.cfg'
../Monitor/Monitor.c:24: error: too few arguments to function 'monitor.init'
../Monitor/Monitor.c:26: error: too few arguments to function 'monitor.print'
make: *** [Monitor/Monitor.o] Error 1
17:18:43 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../Monitor/Monitor.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"Monitor/Monitor.d" -MT"Monitor/Monitor.d" -c -o "Monitor/Monitor.o" "../Monitor/Monitor.c"
Finished building: ../Monitor/Monitor.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./Monitor/Monitor.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3742 bytes (11.4% Full)
(.text + .data + .bootloader)

Data:          8 bytes (0.4% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
17:19:29 **** Incremental Build of configuration Release for project GPIO_LCD ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -Os -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=8000000UL -MMD -MP -MF"main.d" -MT"main.d" -c -o "main.o" "../main.c"
../main.c: In function 'main':
../main.c:34: warning: unused variable 'ptr'
../main.c:22: warning: 'lcd.obj' is used uninitialized in this function
Finished building: ../main.c
 
Building target: GPIO_LCD.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,GPIO_LCD.map -mmcu=atmega32 -o "GPIO_LCD.elf"  ./lcd/lcd_alphanumeric_16x2.o  ./Monitor/Monitor.o  ./main.o   
Finished building target: GPIO_LCD.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S GPIO_LCD.elf  >"GPIO_LCD.lss"
Finished building: GPIO_LCD.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex GPIO_LCD.elf  "GPIO_LCD.hex"
Finished building: GPIO_LCD.hex
 
Create eeprom image (ihex format)
avr-objcopy -j .eeprom --no-change-warnings --change-section-lma .eeprom=0 -O ihex GPIO_LCD.elf  "GPIO_LCD.eep"
Finished building: GPIO_LCD.eep
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 GPIO_LCD.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    3718 bytes (11.3% Full)
(.text + .data + .bootloader)

Data:          2 bytes (0.1% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
