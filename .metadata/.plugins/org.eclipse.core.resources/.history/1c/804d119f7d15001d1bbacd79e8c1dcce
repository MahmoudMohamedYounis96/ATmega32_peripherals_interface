/*
 * timer_delay.c
 *
 *  Created on: Jul 31, 2022
 *      Author: Mahmoud_Mohamed
 */
// Standard Libraries.
#include <stdio.h>
#include <stdint.h>
#include <stdbool.h>

// AVR AT_Mega32 Libraries.
#include <avr/io.h>
#include <avr/interrupt.h>

// Local Header Files.
#include "timer_delay.h"

/*====================== Functions Declarations ======================*/
void Timer0_Delay_us(uint32_t time){

	// Select Flag to generate overflow every 1 micro second.

	// Initialize timer0 to overflow every 1 micro second.
}

void Timer0_Delay_ms(uint32_t time){

	while(time != 0){
		// Load TCCR0 with the control values
		//{Normal mode, OC0 is disconnected, and F_CPU/64 frequency prescaler.}
		// load initial value for 1 msec delay.
		TCNT0 = 131;

		// Normal mode.
		TCCR0 &= ~(1<<WGM01);
		TCCR0 &= ~(1<<WGM00);

		// pre-scaler = 1/64.
		TCCR0 |= (1<<CS00);
		TCCR0 |= (1<<CS01);
		TCCR0 &= ~(1<<CS02);

		// Wait for TOV0 to roll over.
		while( (TIFR&(1<<TOV0)) == 0);

		// Turn off timer.
		TCCR0 = 0x00;

		// Clear TOV0.
		TIFR |= (1<<TOV0);

		// Decrement the time.
		time--;
	}

	// Exit the function.
	return;
}
